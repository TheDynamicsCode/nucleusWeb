<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>biz.szydlowski</groupId>
    <artifactId>nucleusWeb</artifactId>
    <version>2.0.9</version>
    <packaging>jar</packaging>
      <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
         <java.version>1.8</java.version>
        <log4j.version>2.13.3</log4j.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>zbxUtils</artifactId>
            <version>1.0.9</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>commons-daemon</groupId>
            <artifactId>commons-daemon</artifactId>
            <version>1.2.3</version>
            <type>jar</type>
        </dependency>
         <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>${log4j.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
        </dependency>
        
         <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.7.30</version>
        </dependency>
    </dependencies>
    
    <build>
           <resources>
            <resource>
              <directory>src/resources</directory>
            </resource>
          </resources>
           <extensions>
            <extension>
              <groupId>org.apache.maven.wagon</groupId>
              <artifactId>wagon-ftp</artifactId>
              <version>2.10</version>
            </extension>
          </extensions>  
            
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <!-- Attach the shade into the package phase -->
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                             
                          <shadedArtifactAttached>true</shadedArtifactAttached>
                          <shadedClassifierName>launcher</shadedClassifierName> <!-- Can be any name that makes sense -->
    
                            <transformers>
                                <transformer
                                    implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <mainClass>biz.szydlowski.nucleusweb.server.NucleusServer</mainClass>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
             <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.3.1</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals><goal>proguard</goal></goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- Our application is so big that ProGuard had ran out of memory -->
                    <maxMemory>1024m</maxMemory>

                    <!-- File with proguard configuration -->
                    <proguardInclude>${basedir}/proguard.conf</proguardInclude>

                    <!-- Now exclude all modules that are embedded in the jar, so that
                        ProGuard won't see a redefinition of each single class.
                        You don't have to write down your main module. -->
                    <exclusions>
                        <exclusion>
                            <groupId>org.cos</groupId>
                            <artifactId>data</artifactId>
                        </exclusion>

                        <!-- And so on -->
                    </exclusions>

                    <!--
                        List external jars your application depends on
                        (that not listed in maven dependencies).
                        You probably depend on Java runtime (rt.jar).

                        JCE stands for Java Cryptography Extension.
                        You probably don't need it, but my application does.
                    -->
                    <libs>
                        <lib>${java.home}/lib/rt.jar</lib>
                        <lib>${java.home}/lib/jce.jar</lib>
                        <lib>${java.home}/lib/ext/sunjce_provider.jar</lib>
                    </libs>
                </configuration>
            </plugin>
             <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>wagon-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                  <execution>
                    <id>upload-assembly</id>
                    <phase>install</phase>
                    <goals>
                      <goal>upload-single</goal>
                    </goals>
                    <configuration>
                      <serverId>ftp-repository</serverId> <!-- references the server declaration -->
                      <fromFile>${project.build.directory}/${project.build.finalName}-launcher.jar</fromFile>
                      <url>ftp://nanoweb.civ.pl/repository</url>
                      <toFile>nucleusWeb.jar</toFile>
                    </configuration>
                    </execution>
                  </executions>
             </plugin>

        </plugins>
    </build>
    <name>nucleusWeb</name>
    <description>NucleusServer (C) Dominik Szyd≈Çowski</description>
</project>